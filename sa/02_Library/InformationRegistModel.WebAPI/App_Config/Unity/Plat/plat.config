<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity"
             type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, 
             Microsoft.Practices.Unity.Configuration"/>
  </configSections>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">

    <!--框架接口-->
    <alias alias="Identifier" type="LeadingCloud.Framework.Identifier, LeadingCloud.Framework" />
    <!-- ID编码生成-->
    <alias alias="IServerContext" type="LeadingCloud.Framework.IServerContext, LeadingCloud.Framework" />
    <!-- 上下文-->
    <alias alias="IDatabaseFactory" type="LeadingCloud.Framework.IDatabaseFactory, LeadingCloud.Framework" />
    <!-- 关系型数据-->
    <alias alias="IDatabaseFactoryNoSql" type="LeadingCloud.Framework.IDatabaseFactoryNoSql, LeadingCloud.Framework" />
    <!-- 非关系型数据-->
    <alias alias="ILogger" type="LeadingCloud.Framework.ILogger, LeadingCloud.Framework" />
    <!-- 日志处理 -->
    <alias alias="IMessage" type="LeadingCloud.Framework.IMessage, LeadingCloud.Framework" />
    <!-- 即时消息 IM 处理-->
    <alias alias="IFileManager" type="LeadingCloud.Framework.IFileManager, LeadingCloud.Framework" />
    <!-- 文件管理 -->
    <alias alias="IPay" type="LeadingCloud.Framework.IPay, LeadingCloud.Framework" />
    <!-- 支付 -->
    <alias alias="ITag" type="LeadingCloud.Framework.ITag, LeadingCloud.Framework" />
    <!--标签 -->
    <alias alias="IEncrypt"  type="LeadingCloud.Framework.IEncrypt, LeadingCloud.Framework" />
    <!-- 加密 -->
    <alias alias="IRSAEncrypt" type="LeadingCloud.Framework.IRSAEncrypt, LeadingCloud.Framework" />
    <alias alias="IReversibleEncrypt"  type="LeadingCloud.Framework.IReversibleEncrypt, LeadingCloud.Framework" />
    <!--RSA非对称加密-->
    <alias alias="ILanguge" type="LeadingCloud.Framework.ILanguge, LeadingCloud.Framework" />
    <!-- 国际化 语言 -->
    <alias alias="IFullText" type="LeadingCloud.Framework.IFullText, LeadingCloud.Framework" />
    <!-- 全文 -->
    <alias alias="IMQ" type="LeadingCloud.Framework.IMQ, LeadingCloud.Framework" />
    <!-- 队列 栈-->
    <alias alias="IConsumer" type="LeadingCloud.Framework.MQ.IConsumer, LeadingCloud.Framework" />
    <!-- 队列 消费者-->

    <alias alias="IMQFactory" type="LeadingCloud.Framework.IMQFactory, LeadingCloud.Framework" />
    <!-- 队列工厂-->

    <alias alias="IConfig" type="LeadingCloud.Framework.IConfig, LeadingCloud.Framework" />
    <!-- 配置文件 -->
    <alias alias="IPubSub" type="LeadingCloud.Framework.IPubSub, LeadingCloud.Framework" />
    <!--发布与订阅 -->
    <alias alias="IPubSubFactory" type="LeadingCloud.Framework.IPubSubFactory, LeadingCloud.Framework" />
    <!--发布与订阅工厂 -->
    <alias alias="ISub" type="LeadingCloud.Framework.PubSub.ISub, LeadingCloud.Framework" />
    <!-- 订阅处理接口 -->

    <!--<alias alia   s="IPubSubscription" type="LeadingCloud.Framework.IPubSubscription, LeadingCloud.Framework" />-->
    <!--订阅-->

    <alias alias="IRequestHandler`1" type="LeadingCloud.Framework.Web.IRequestHandler`1, LeadingCloud.Framework" />
    <!-- 请求处理接口 -->
    <alias alias="IResponseHandler`2" type="LeadingCloud.Framework.Web.IResponseHandler`2, LeadingCloud.Framework" />
    <!--相应处理接口 -->
    <!--<alias alias="IPubSubscription" type="LeadingCloud.Framework.IPubSubscription, LeadingCloud.Framework" />-->
    <!--订阅处理器 -->
    <alias alias="ICache" type="LeadingCloud.Framework.ICache, LeadingCloud.Framework" />
    <!-- 缓存-->
    <alias alias="ICacheHash" type="LeadingCloud.Framework.ICacheHash, LeadingCloud.Framework" />
    <!-- Hash缓存-->
    <alias alias="ICacheSortedSet" type="LeadingCloud.Framework.ICacheSortedSet, LeadingCloud.Framework" />
    <!-- SortedSet缓存-->
    <alias alias="IPersistance`1" type="LeadingCloud.Framework.IPersistance`1, LeadingCloud.Framework" />
    <!-- 持久化-->
    <alias alias="IRoute" type="LeadingCloud.Framework.IRoute, LeadingCloud.Framework" />
    <!-- IoC_路由-->
    <alias alias="ICacheFactory" type="LeadingCloud.Framework.ICacheFactory, LeadingCloud.Framework" />
    <alias alias="ICacheHash" type="LeadingCloud.Framework.ICacheHash, LeadingCloud.Framework" />
    <alias alias="ICacheSortedSet" type="LeadingCloud.Framework.ICacheSortedSet, LeadingCloud.Framework" />
    <!-- 缓存工厂-->
    <alias alias="IPersistFactory" type="LeadingCloud.Framework.IPersistFactory, LeadingCloud.Framework" />
    <!-- 请求响应处理工厂-->
    <alias alias="IHandlerFactory" type="LeadingCloud.Framework.Web.IHandlerFactory, LeadingCloud.Framework" />

    <!-- 请求API处理-->
    <alias alias="ILZHttpClient" type="LeadingCloud.Framework.Web.Http.ILZHttpClient, LeadingCloud.Framework" />
    <!--短信-->
    <alias alias="IEmail" type="LeadingCloud.Framework.Message.Email.IEmail, LeadingCloud.Framework" />
    <!--邮件-->
    <alias alias="ISMS" type="LeadingCloud.Framework.Message.SMS.ISMS, LeadingCloud.Framework" />

    <!--二维码-->
    <alias alias="IQRCodeHelper" type="LeadingCloud.Framework.IQRCode, LeadingCloud.Framework" />

    <!--Npoi-->
    <alias alias="ILzNpoi" type="LeadingCloud.Framework.ILzNpoi, LeadingCloud.Framework" />

    <!--NoSql-->
    <alias alias="INoSqlProvider" type="LeadingCloud.Framework.NoSql.INoSqlProvider, LeadingCloud.Framework" />


    <!--持久化工厂-->

    <!--框架实现类-->
    <alias alias="MongoDB" type="LeadingCloud.Framework.Adapter.LZMongoDB.MongoDbProvider, LeadingCloud.Framework.Adapter" />

    <!--<alias alias="RedisSubscription" type="LeadingCloud.Framework.Adapter.Redis.LZRedisSubscription, LeadingCloud.Framework.Adapter.Redis" />-->

    <alias alias="ServerContext" type="LeadingCloud.Framework.ServerContext, LeadingCloud.Framework" />
    <!--<alias alias="Languge" type="LeadingCloud.Framework.Adapter.LangugeGlobal.LZLanguge, LeadingCloud.Framework.Adapter.LangugeGlobal" />-->
    <alias alias="Log" type="LeadingCloud.Framework.Adapter.Log.LZLogger, LeadingCloud.Framework.Adapter" />
    <alias alias="LogDB" type="LeadingCloud.Framework.Adapter.Log.LZLoggerForDB, LeadingCloud.Framework.Adapter" />
    <alias alias="Config" type="LeadingCloud.Framework.Adapter.Config.LZConfig, LeadingCloud.Framework.Adapter" />
    <alias alias="Encrypt_Base64" type="LeadingCloud.Framework.Adapter.Encrypt.Base64, LeadingCloud.Framework.Adapter" />

    <alias alias="Encrypt_MD5" type="LeadingCloud.Framework.Adapter.Encrypt.MD5, LeadingCloud.Framework.Adapter" />
    <alias alias="Encrypt_AES" type="LeadingCloud.Framework.Adapter.Encrypt.AES, LeadingCloud.Framework.Adapter" />
    <alias alias="Encrypt_SHA256" type="LeadingCloud.Framework.Adapter.Encrypt.SHA256, LeadingCloud.Framework.Adapter" />
    <alias alias="RequestHandler`1" type="LeadingCloud.Core.BusinessLogic.Handler.RequestHandler`1, LeadingCloud.Core" />
    <alias alias="ResponseHandler`2" type="LeadingCloud.Core.BusinessLogic.Handler.ResponseHandler`2, LeadingCloud.Core" />
    <alias alias="MessageRequestHandler`1" type="LeadingCloud.IM.Server.BusinessLogic.Handler.RequestHandler`1, LeadingCloud.IM.Server" />
    <alias alias="MessageResponseHandler`2" type="LeadingCloud.IM.Server.BusinessLogic.Handler.ResponseHandler`2, LeadingCloud.IM.Server" />
    <alias alias="SDKRequestHandler`1" type="LeadingCloud.SDK.Core.Handler.BaseRequestHandler`1, LeadingCloud.SDK" />
    <alias alias="SDKResponseHandler`2" type="LeadingCloud.SDK.Core.Handler.BaseResponseHandler`2, LeadingCloud.SDK" />


    <alias alias="RSAEncrypt" type="LeadingCloud.Framework.Adapter.Encrypt.RSAEncrypt, LeadingCloud.Framework.Adapter" />
    <alias alias="DefaultIdentifier" type="LeadingCloud.Framework.Manager.DefaultIdentifier,LeadingCloud.Framework" />
    <alias alias="IdWorkerIdentifier" type="LeadingCloud.Framework.Id.IdWorkerIdentifier,LeadingCloud.Framework" />

    <alias alias="LZHttpClient" type="LeadingCloud.Framework.Web.Http.LZHttpClient,LeadingCloud.Framework" />

    <!--框架实现类_工厂及路由-->
    <alias alias="CacheFactory" type="LeadingCloud.Framework.Factory.CacheFactory, LeadingCloud.Framework" />
    <!-- 工厂-->
    <alias alias="DefaultRoute" type="LeadingCloud.Framework.Factory.DefaultRoute, LeadingCloud.Framework" />
    <!-- 路由-->
    <alias alias="PersistFactory" type="LeadingCloud.Framework.Factory.PersistFactory, LeadingCloud.Framework" />
    <!-- 工厂-->
    <alias alias="DatabaseFactory" type="LeadingCloud.Framework.Adapter.DB.DatabaseFactory,LeadingCloud.Framework.Adapter" />
    <alias alias="PubSubFactory" type= "LeadingCloud.Framework.Factory.PubSubFactory, LeadingCloud.Framework" />
    <alias alias="HandlerFactory" type= "LeadingCloud.Framework.Factory.HandlerFactory, LeadingCloud.Framework" />
    <alias alias="MQFactory" type= "LeadingCloud.Framework.Factory.MQFactory, LeadingCloud.Framework" />


    <!--框架实现类_缓存-->
    <alias alias="Redis" type="LeadingCloud.Framework.Adapter.Redis.LZRedis, LeadingCloud.Framework.Adapter" />
    <alias alias="StaticClass" type="LeadingCloud.Framework.Adapter.LocalCache.LZCacheToStaticClass, LeadingCloud.Framework.Adapter" />
    <alias alias="RedisByServiceStack" type="LeadingCloud.Framework.Adapter.Redis.LZRedisByServiceStack, LeadingCloud.Framework.Adapter" />
    <!--<alias alias="LZRedisByBookSleeve" type="LeadingCloud.Framework.Adapter.Redis.LZRedisByBookSleeve, LeadingCloud.Framework.Adapter.Redis" />-->

    <!--框架实现类_订阅发布及消息队列-->
    <alias alias="RabbitMQ" type="LeadingCloud.Framework.Adapter.LZRabbitMQ.Rabbit,LeadingCloud.Framework.Adapter" />
    <!--框架实现类_邮件-->
    <alias alias="LZEmailForMySqlDb" type="LeadingCloud.Framework.Adapter.Email.LZEmailForMySqlDb,LeadingCloud.Framework.Adapter" />
    <alias alias="LZEmailForLumisoft" type="LeadingCloud.Framework.Adapter.Email.LZEmailForLumisoft,LeadingCloud.Framework.Adapter" />
    <alias alias="LZEmailForNet" type="LeadingCloud.Framework.Adapter.Email.LZEmailForNet,LeadingCloud.Framework.Adapter" />
    <!--框架实现类_短信-->
    <alias alias="LZSMSForMySqlDb" type="LeadingCloud.Framework.Adapter.SMS.LZSMSForMySqlDb,LeadingCloud.Framework.Adapter" />
    <alias alias="LZSMSForAlidayu" type="LeadingCloud.Framework.Adapter.SMS.LZSMSForAlidayu,LeadingCloud.Framework.Adapter" />
    <alias alias="LZSMSForAliyun" type="LeadingCloud.Framework.Adapter.SMS.LZSMSForAliyun,LeadingCloud.Framework.Adapter" />

    <!--框架实现类_二维码-->
    <alias alias="QRCodeHelper" type="LeadingCloud.Framework.Adapter.QRCode.QRCodeHelper,LeadingCloud.Framework.Adapter" />

    <!--框架实现类_Excel-->
    <alias alias="NPOIHelper" type="LeadingCloud.Framework.Adapter.LZNPOI.NPOIHelper,LeadingCloud.Framework.Adapter" />


    <!--框架接口类型映射-->
    <container name="default">
      <!--工厂-->
      <register  type="ICacheFactory" mapTo="CacheFactory" >
        <lifetime type="singleton" />
        <property name="ContainerName" value="CachePool"/>
      </register>
      <register type="IPersistFactory"  mapTo="PersistFactory">
        <lifetime type="singleton" />
        <property name="ContainerName" value="PersistPool"/>
      </register>
      <register type="IPubSubFactory" mapTo="PubSubFactory"  >
        <lifetime type="singleton" />
      </register>
      <register type="IMQFactory" mapTo="MQFactory"  >
        <lifetime type="singleton" />
      </register>
      <register type="IHandlerFactory" mapTo="HandlerFactory"  >
        <lifetime type="singleton" />
        <property name="ContainerName" value="HandlerPool"/>
      </register>
      <register type="IQRCodeHelper" mapTo="QRCodeHelper"  >
        <lifetime type="singleton" />
      </register>
      <register type="ILzNpoi" mapTo="NPOIHelper"  >
        <lifetime type="singleton" />
      </register>

      <!--其它框架-->
      <register type="Identifier" mapTo="IdWorkerIdentifier"  >
        <lifetime type="singleton" />
      </register>

      <register type="IConfig" mapTo="Config"  >
        <lifetime type="singleton" />
        <method name="Init">
          <param name="TypeConfig" value="/app_config" >
          </param>
        </method>
      </register>
      <register type="ICache" mapTo="StaticClass">
        <lifetime type="singleton" />
      </register>

      <register type="IDatabaseFactory" mapTo="DatabaseFactory"  >
        <!--按照应用创建，不再单例模式-->
        <!--<lifetime type="singleton" />-->
      </register>
      <register type="IMQ" mapTo="RabbitMQ"  >
        <lifetime type="singleton" />
      </register>
      <!--<register type="ILanguge" mapTo="Languge"  >
        <lifetime type="singleton" />
      </register>-->
      <register type="ILogger" mapTo="Log"  >
        <lifetime type="singleton" />
      </register>
      <register type="IPubSub" mapTo="RabbitMQ">
        <!--<property name="Hosts" value="amqp://rabbit:leadingcloud@192.168.11.29:5672/"/>-->
        <property name="TypeConfig" value="mq.config"/>
        <property name="TypeName" value="RabbitMQ"/>
      </register>
      <register type="IPubSub" mapTo="Redis" name="Redis" >
        <property name="TypeConfig" value="mq.config"/>
        <property name="TypeName" value="StackExchange"/>
      </register>
      <!--<register type="IPubSubscription" mapTo="RedisSubscription"  >
        <lifetime type="singleton" />
      </register>-->
      <register type="IPubSub" mapTo="RabbitMQ" name="RabbitMQ" >
        <!--rabbit@leadingcloud@localhost-->
        <!--amqp://user:pass@hostName:port/vhost-->
        <!--
        Username
"guest"
Password
"guest"
Virtual host
"/"
Hostname
"localhost"
port
5672 for regular connections, 5671 for connections that use TLS
        -->
        <property name="TypeConfig" value="mq.config"/>
        <property name="TypeName" value="RabbitMQ"/>
      </register>

      <register type="IEncrypt" mapTo="Encrypt_Base64" name="Base64"  >
        <lifetime type="singleton" />
      </register>

      <register type="IEncrypt" mapTo="Encrypt_MD5" name="MD5" >
        <lifetime type="singleton" />
      </register>
      <register type="IEncrypt" mapTo="Encrypt_SHA256" name="SHA256" >
        <lifetime type="singleton" />
      </register>
      <register type="IReversibleEncrypt" mapTo="Encrypt_AES" name="AES">
        <lifetime type="singleton" />
      </register>

      <register type="IServerContext" mapTo="ServerContext"  name="SingletonContext" >
        <lifetime type="singleton" />
      </register>
      <register type="IRSAEncrypt" mapTo="RSAEncrypt">
        <lifetime type="singleton" />
      </register>
      <register type="ILZHttpClient" mapTo="LZHttpClient">
        <lifetime type="singleton" />
      </register>
      <register type="INoSqlProvider" mapTo="MongoDB">
        <lifetime type="singleton" />
        <property name="TypeName" value="MongoDB"/>
      </register>
    </container>

    <!--缓存工厂，类型映射-->
    <container name="CachePool">
      <!--工厂默认接口实现-->
      <register type="ICache" mapTo="Redis">
        <lifetime type="singleton" />
        <property name="TypeConfig" value="cache.config"/>
        <property name="TypeName" value="StackExchange"/>
      </register>
      <register type="ICacheHash" mapTo="Redis">
        <lifetime type="singleton" />
        <property name="TypeConfig" value="cache.config"/>
        <property name="TypeName" value="StackExchange"/>
      </register>
      <register type="ICacheSortedSet" mapTo="Redis">
        <lifetime type="singleton" />
        <property name="TypeConfig" value="cache.config"/>
        <property name="TypeName" value="StackExchange"/>
      </register>
      <register type="ICache" mapTo="RedisByServiceStack" name="RedisByServiceStack">
        <lifetime type="singleton" />
        <property name="TypeConfig" value="cache.config"/>
        <property name="TypeName" value="ServiceStack"/>
      </register>
      <register type="ICacheHash" mapTo="RedisByServiceStack" name="RedisByServiceStack">
        <lifetime type="singleton" />
        <property name="TypeConfig" value="cache.config"/>
        <property name="TypeName" value="ServiceStack"/>
      </register>
      <register type="ICacheSortedSet" mapTo="RedisByServiceStack" name="RedisByServiceStack">
        <lifetime type="singleton" />
        <property name="TypeConfig" value="cache.config"/>
        <property name="TypeName" value="ServiceStack"/>
      </register>

      <!--路由实现类注册-->
      <register type="IRoute" mapTo="DefaultRoute">
        <lifetime type="singleton" />
      </register>
      <!--路由表注册-->

      <register type="ICache" mapTo="Redis" name ="Auth">
        <lifetime type="singleton" />
        <property name="CacheCount" value="-1"/>
        <property name="TypeConfig" value="cache.config"/>
        <property name="TypeName" value="StackExchange"/>
      </register>
      <register type="ICache" mapTo="Redis" name="Redis"  >
        <lifetime type="singleton" />
        <property name="TypeConfig" value="cache.config"/>
        <property name="TypeName" value="StackExchange"/>
      </register>
      <register type="ICache" mapTo="StaticClass"  name ="CacheCaseB" >
        <lifetime type="singleton" />
        <!--缓存数量无限制-->
        <property name="CacheCount" value="3000"/>
        <!--无缓存失效时间-->
        <property name="OutTime" value="0"/>
      </register>
      <register type="ICacheSortedSet" mapTo="Redis" name ="MessageList">
        <lifetime type="singleton" />
        <property name="CacheCount" value="-1"/>
        <property name="TypeConfig" value="cache.config"/>
        <property name="TypeName" value="StackExchange"/>
      </register>
      <register type="ICache" mapTo="Redis" name ="Message">
        <lifetime type="singleton" />
        <property name="CacheCount" value="-1"/>
        <property name="TypeConfig" value="cache.config"/>
        <property name="TypeName" value="StackExchange"/>
      </register>
      <register type="ICacheHash" mapTo="Redis" name ="MessageHash">
        <lifetime type="singleton" />
        <property name="CacheCount" value="-1"/>
        <property name="TypeConfig" value="cache.config"/>
        <property name="TypeName" value="StackExchange"/>
      </register>
    </container>

    <!--邮件，类型映射-->
    <container name="EmailPool">
      <!--工厂默认接口实现-->
      <register type="IEmail" mapTo="LZEmailForMySqlDb" name="LZEmailForMySqlDb">
        <lifetime type="singleton" />
      </register>
      <register type="IEmail" mapTo="LZEmailForLumisoft" name="LZEmailForLumisoft">
        <lifetime type="singleton" />
      </register>
      <register type="IEmail" mapTo="LZEmailForNet" name="LZEmailForNet">
        <lifetime type="singleton" />
      </register>

    </container>
    <!--短信，类型映射-->
    <container name="SMSPool">
      <!--工厂默认接口实现-->
      <register type="ISMS" mapTo="LZSMSForMySqlDb"  name="LZSMSForMySqlDb">
        <lifetime type="singleton" />
      </register>
      <register type="ISMS" mapTo="LZSMSForAlidayu"  name="LZSMSForAlidayu">
        <lifetime type="singleton" />
      </register>
      <register type="ISMS" mapTo="LZSMSForAliyun"  name="LZSMSForAliyun">
        <lifetime type="singleton" />
      </register>
    </container>
    <!--日志，类型映射-->
    <container name="LogPool">
      <!--工厂默认接口实现-->
      <register type="ILogger" mapTo="Log" >
        <lifetime type="singleton" />
      </register>
      <register type="ILogger" mapTo="LogDB"  name="LogDB" >
        <lifetime type="singleton" />
      </register>
      <register type="ILogger" mapTo="Log" name="LogFile">
        <lifetime type="singleton" />
      </register>
    </container>

    <!--请求响应工厂，类型映射-->
    <container name="HandlerPool">
      <!--工厂默认接口实现-->
      <register type="IRequestHandler`1" mapTo="RequestHandler`1">
        <lifetime type="singleton" />
      </register>
      <register type="IResponseHandler`2" mapTo="ResponseHandler`2">
        <lifetime type="singleton" />
      </register>


      <!--路由实现类注册-->
      <register type="IRoute" mapTo="DefaultRoute">
        <lifetime type="singleton" />
      </register>
      <!--路由表注册-->
      <!--
      <register type="IRequestHandler`1" mapTo="MessageRequestHandler`1" name="Message">
        <lifetime type="singleton" />
      </register>
      <register type="IResponseHandler`2" mapTo="MessageResponseHandler`2" name="Message">
        <lifetime type="singleton" />
      </register>-->
    </container>
    <!--请求响应工厂，类型映射，单独拿出一个Pool,解决Core.WebAPI没有相关DLL报错的问题-->
    <container name="MessageHandlerPool">
      <!--工厂默认接口实现-->
      <register type="IRequestHandler`1" mapTo="MessageRequestHandler`1">
        <lifetime type="singleton" />
      </register>
      <register type="IResponseHandler`2" mapTo="MessageResponseHandler`2">
        <lifetime type="singleton" />
      </register>
      <!--路由实现类注册-->
      <register type="IRoute" mapTo="DefaultRoute">
        <lifetime type="singleton" />
      </register>
    </container>
    <!--请求响应工厂，类型映射，单独拿出一个Pool,解决Core.WebAPI没有相关DLL报错的问题-->
    <container name="SDKHandlerPool">
      <!--工厂默认接口实现-->
      <register type="IRequestHandler`1" mapTo="SDKRequestHandler`1">
        <lifetime type="singleton" />
      </register>
      <register type="IResponseHandler`2" mapTo="SDKResponseHandler`2">
        <lifetime type="singleton" />
      </register>
      <!--路由实现类注册-->
      <register type="IRoute" mapTo="DefaultRoute">
        <lifetime type="singleton" />
      </register>
    </container>
    <!--订阅发布工厂，类型映射-->
    <container name="PubSubPool">
      <!--工厂默认接口实现-->
      <register type="IPubSub"  mapTo="RabbitMQ">
        <property name="TypeConfig" value="mq.config"/>
        <property name="TypeName" value="RabbitMQ"/>
      </register>
      <!--路由实现类注册-->
      <register type="IRoute" mapTo="DefaultRoute">
        <lifetime type="singleton" />
      </register>
    </container>
    <!--异步处理类型映射-->
    <container name="MQ">
      <register name="LZLogMQ" type="IConsumer" mapTo="Log">
        <lifetime type="singleton" />
      </register>
    </container>
  </unity>
</configuration>